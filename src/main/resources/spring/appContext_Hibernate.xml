<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd" default-autowire="byName" default-lazy-init="false">
    <context:annotation-config />
	<!--
    <context:component-scan base-package="cn.vector.**.model">
        <context:include-filter type="annotation" expression="javax.persistence.Entity"/>
    </context:component-scan>
-->
    <!-- 定义占位符所在的文件 -->
	<!--
	<context:property-placeholder location="classpath:properties/jdbc.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${druid.database.url}" />
		<property name="username" value="${druid.database.username}" />
		<property name="password" value="${druid.database.password}" />
		<property name="driverClassName" value="${druid.database.driverClassName}" />
		<property name="filters" value="${druid.database.filters}" />
		<property name="maxActive" value="${druid.database.maxActive}" />
		<property name="initialSize" value="${druid.database.initialSize}" />
		<property name="maxWait" value="${druid.database.maxWait}" />
		<property name="minIdle" value="${druid.database.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis"
			value="${druid.database.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${druid.database.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${druid.database.validationQuery}" />
		<property name="testWhileIdle" value="${druid.database.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.database.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.database.testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${druid.database.maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${druid.database.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${druid.database.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${druid.database.logAbandoned}" />
	</bean>-->
	<!--Hibernate Annotation SessionFatory -->
	<!--
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="packagesToScan">
			<list>
				<value>cn.**.model</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.dialect.storage">${hibernate.dialect.storage_engine}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">${hibernate.jdbc.use_streams_for_binary}</prop>
				<prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.use_identifer_rollback">${hibernate.use_identifer_rollback}</prop>
				<prop key="hibernate.transaction.coordinator_class">${hibernate.transaction.coordinator_class}</prop>
			</props>
		</property>
	</bean>-->
    <!--Hibernate TransactionManager -->
	<!--
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>-->
	<!-- 支持 @AspectJ 标记 <aop:aspectj-autoproxy/> -->

	<!-- 以 @Transactional 标注来定义事务 -->
	<tx:annotation-driven proxy-target-class="true" />
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
</beans>